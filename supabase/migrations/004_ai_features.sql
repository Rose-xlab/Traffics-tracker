-- migrations/004_ai_features.sql

-- Add AI-related fields to products table
ALTER TABLE products 
ADD COLUMN IF NOT EXISTS keywords TEXT[] DEFAULT '{}',
ADD COLUMN IF NOT EXISTS common_names TEXT[] DEFAULT '{}', 
ADD COLUMN IF NOT EXISTS searchable_terms TEXT, 
ADD COLUMN IF NOT EXISTS ai_enhanced BOOLEAN DEFAULT FALSE;

COMMENT ON COLUMN products.keywords IS 'Keywords/tags to improve search';
COMMENT ON COLUMN products.common_names IS 'Common or alternative names for the product';
COMMENT ON COLUMN products.searchable_terms IS 'Consolidated searchable terms for improved matching';
COMMENT ON COLUMN products.ai_enhanced IS 'Flag indicating if this product has been enhanced with AI';

-- Create table for AI-generated explanations
CREATE TABLE IF NOT EXISTS ai_explanations (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    product_id UUID NOT NULL REFERENCES products(id) ON DELETE CASCADE,
    country_id UUID REFERENCES countries(id) ON DELETE CASCADE,
    plain_language TEXT NOT NULL,
    cost_impact TEXT NOT NULL,
    alternatives TEXT,
    technical_details TEXT,
    generated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    expires_at TIMESTAMPTZ NOT NULL DEFAULT (now() + interval '30 days'),
    UNIQUE(product_id, country_id)
);

COMMENT ON TABLE ai_explanations IS 'Cached explanations generated by AI for product/country combinations';

-- Create index for faster searches
CREATE INDEX IF NOT EXISTS idx_products_searchable_terms ON products USING gin(to_tsvector('english', searchable_terms));
CREATE INDEX IF NOT EXISTS idx_products_keywords ON products USING gin(keywords);
CREATE INDEX IF NOT EXISTS idx_products_ai_enhanced ON products(ai_enhanced);

-- Create table for AI search mappings
CREATE TABLE IF NOT EXISTS ai_search_mappings (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    query TEXT NOT NULL,
    mapped_hts_codes TEXT[] NOT NULL,
    enhanced_query TEXT,
    mapping_data JSONB,
    usage_count INTEGER DEFAULT 1,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE UNIQUE INDEX IF NOT EXISTS idx_ai_search_mappings_query ON ai_search_mappings(lower(query));
CREATE INDEX IF NOT EXISTS idx_ai_search_mappings_hts_codes ON ai_search_mappings USING gin(mapped_hts_codes);

COMMENT ON TABLE ai_search_mappings IS 'Cache for AI-enhanced search queries to HTS code mappings';

-- Create table for AI usage tracking
CREATE TABLE IF NOT EXISTS ai_usage_metrics (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    feature TEXT NOT NULL,
    tokens_used INTEGER NOT NULL,
    request_time DOUBLE PRECISION,
    success BOOLEAN NOT NULL DEFAULT TRUE,
    metadata JSONB,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE INDEX IF NOT EXISTS idx_ai_usage_metrics_feature ON ai_usage_metrics(feature);
CREATE INDEX IF NOT EXISTS idx_ai_usage_metrics_created_at ON ai_usage_metrics(created_at);

COMMENT ON TABLE ai_usage_metrics IS 'Metrics for AI feature usage and performance tracking';

-- Add user preference for AI features
ALTER TABLE users 
ADD COLUMN IF NOT EXISTS ai_features_enabled BOOLEAN DEFAULT TRUE;

COMMENT ON COLUMN users.ai_features_enabled IS 'User preference for enabling AI-enhanced features';